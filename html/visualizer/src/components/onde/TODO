
* Warning if the data don't conform the schema

* non-restrictive enum: users can select from the existing values or enter their own values
  displayed as combobox.
* exclusive (pedantic) (?)
* Tuple type (use array)

* i18n & L10n


//TODO: More consistent IDs
// Fix the mess: field value id and field id
//TODO: Type could be array (!) i.e., union
//TODO: Check if the property name already exist
//TODO: Remove the limitations for property name (support all kind of characters)
//TODO: Deal with 'any' (more consistenly)
//TODO: Boolean value consistency
//TODO: Add 'custom' class to additional properties and list items
//TODO: Can't just use 'object' and 'array' as type option. Must specify which definition.
//TODO: Support empty (null?) array item
//TODO: Nicer error reporting (for both rendering and data collecting)
//TODO: More treatments to multiline string
//TODO: Smart multiline (textarea) based on the format (and explicit schema property)
//TODO: Initially show the edit bars as semi transparent and make it opaque on hover
//TODO: More than one level summary
//TODO: Even-odd class for fields
//TODO: Support for combo requirement (e.g.: length + width + height or height + diameter)
//TODO: Allow to replace wordings (e.g.: "Add property" to "Add person") Use schema's name?
//TODO: Use description as fallback of title (element's title should be only taken from title)
//TODO: Should support something like: { "type": "object", "properties": { "name": "string" } }. 
// With `name` value is string with all default properties.
//TODO: Required: any (any field), combo (set of combination)
//TODO: Automatically add first array item if the item type is singular
//TODO: (non-)Exclusive enum (use combobox or plain input with autocomplete)
//TODO: Display character counter for string field if the length is constrained
//TODO: Descriptive enum value. e.g., { "value": "the-real-value", "label": "Displayed text" }
//TODO: Option: collapsed on load (interactively added items are always expanded)
// Collapse array / object panel if the data is empty and not required
// Collapse array / object panel if it's more than defined depth
//TODO: Cascading options (constructor and render)
//TODO: Array with single primitive type, display the edit bar as input box
//TOTHINK: Boolean field as dropdown with 3 options (' ', 'true'/'yes', 'false'/'no') for non-required
// and 2 options ('true'/'yes', 'false'/'no') for required
