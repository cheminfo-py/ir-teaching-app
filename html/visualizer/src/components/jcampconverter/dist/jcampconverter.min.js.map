{"version":3,"file":"jcampconverter.min.js","sources":["../src/complexChromatogram.js","../src/convertToFloatArray.js","../src/parse/fastParseXYData.js","../src/parse/parsePeakTable.js","../src/parse/parseXYA.js","../node_modules/is-any-array/src/index.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../src/2d/add2D.js","../src/2d/convertTo3DZ.js","../src/2d/generateContourLines.js","../src/profiling.js","../src/simpleChromatogram.js","../node_modules/object-keys/isArguments.js","../node_modules/object-keys/index.js","../node_modules/utils-copy/lib/typedarrays.js","../node_modules/utils-copy-error/lib/copy.js","../node_modules/d3-array/build/d3-array.js","../node_modules/ml-fft/src/fftlib.js","../node_modules/ml-stat/array.js","../node_modules/ml-stat/matrix.js","../node_modules/ml-matrix-convolution/node_modules/ml-fft/src/fftlib.js","../node_modules/nmr-processing/src/constants/gyromagneticRatio.js","../src/postProcessing.js","../src/postProcessingNMR.js","../src/prepareNtuplesDatatable.js","../src/prepareSpectrum.js","../src/convert.js","../src/createTree.js"],"sourcesContent":["const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.x.push(currentX);\n                currentData.y.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","const removeCommentRegExp = /\\$\\$.*/;\nconst peakTableSplitRegExp = /[,\\t ]+/;\n\nexport default function parsePeakTable(spectrum, value, result) {\n  spectrum.isPeaktable = true;\n\n  if (!spectrum.variables || Object.keys(spectrum.variables) === 2) {\n    parseXY(spectrum, value, result);\n  } else {\n    parseXYZ(spectrum, value, result);\n  }\n\n  // we will add the data in the variables\n  if (spectrum.variables) {\n    for (let key in spectrum.variables) {\n      spectrum.variables[key].data = spectrum.data[key];\n    }\n  }\n}\n\nfunction parseXY(spectrum, value, result) {\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.x.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.y.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n\nfunction parseXYZ(spectrum, value, result) {\n  let currentData = {};\n  let variables = Object.keys(spectrum.variables);\n  let numberOfVariables = variables.length;\n  variables.forEach((variable) => (currentData[variable] = []));\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % numberOfVariables === 0) {\n      for (let j = 0; j < values.length; j++) {\n        // todo should try to find a xFactor (y, ...)\n        currentData[variables[j % numberOfVariables]].push(\n          parseFloat(values[j]),\n        );\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.x.push(parseFloat(values[0]));\n    currentData.y.push(parseFloat(values[1]));\n  }\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data.y[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.x.length;\n\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = spectra[i].data.y;\n    for (let j = 0; j < xSize; j++) {\n      let value = z[i][j];\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data.x[0];\n  const lastX = spectra[0].data.x[spectra[0].data.x.length - 1]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: getMedian(z[0].map(Math.abs)),\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\n// modified from https://github.com/es-shims/es5-shim\nvar has = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\nvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\nvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\nvar dontEnums = [\n\t'toString',\n\t'toLocaleString',\n\t'valueOf',\n\t'hasOwnProperty',\n\t'isPrototypeOf',\n\t'propertyIsEnumerable',\n\t'constructor'\n];\nvar equalsConstructorPrototype = function (o) {\n\tvar ctor = o.constructor;\n\treturn ctor && ctor.prototype === o;\n};\nvar excludedKeys = {\n\t$applicationCache: true,\n\t$console: true,\n\t$external: true,\n\t$frame: true,\n\t$frameElement: true,\n\t$frames: true,\n\t$innerHeight: true,\n\t$innerWidth: true,\n\t$outerHeight: true,\n\t$outerWidth: true,\n\t$pageXOffset: true,\n\t$pageYOffset: true,\n\t$parent: true,\n\t$scrollLeft: true,\n\t$scrollTop: true,\n\t$scrollX: true,\n\t$scrollY: true,\n\t$self: true,\n\t$webkitIndexedDB: true,\n\t$webkitStorageInfo: true,\n\t$window: true\n};\nvar hasAutomationEqualityBug = (function () {\n\t/* global window */\n\tif (typeof window === 'undefined') { return false; }\n\tfor (var k in window) {\n\t\ttry {\n\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}());\nvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t/* global window */\n\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\treturn equalsConstructorPrototype(o);\n\t}\n\ttry {\n\t\treturn equalsConstructorPrototype(o);\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar keysShim = function keys(object) {\n\tvar isObject = object !== null && typeof object === 'object';\n\tvar isFunction = toStr.call(object) === '[object Function]';\n\tvar isArguments = isArgs(object);\n\tvar isString = isObject && toStr.call(object) === '[object String]';\n\tvar theKeys = [];\n\n\tif (!isObject && !isFunction && !isArguments) {\n\t\tthrow new TypeError('Object.keys called on a non-object');\n\t}\n\n\tvar skipProto = hasProtoEnumBug && isFunction;\n\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\ttheKeys.push(String(i));\n\t\t}\n\t}\n\n\tif (isArguments && object.length > 0) {\n\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\ttheKeys.push(String(j));\n\t\t}\n\t} else {\n\t\tfor (var name in object) {\n\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\ttheKeys.push(String(name));\n\t\t\t}\n\t\t}\n\t}\n\n\tif (hasDontEnumBug) {\n\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t}\n\t\t}\n\t}\n\treturn theKeys;\n};\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\treturn (Object.keys(arguments) || '').length === 2;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tvar originalKeys = Object.keys;\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t} else {\n\t\t\t\t\treturn originalKeys(object);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\n// MODULES //\n\nvar objectKeys = require( 'object-keys' );\n\n\n// TYPED ARRAY FUNCTIONS //\n\n/**\n* Create functions for copying typed arrays.\n*/\nvar typedArrays = {\n\t'Int8Array': null,\n\t'Uint8Array': null,\n\t'Uint8ClampedArray': null,\n\t'Int16Array': null,\n\t'Uint16Array': null,\n\t'Int32Array': null,\n\t'Uint32Array': null,\n\t'Float32Array': null,\n\t'Float64Array': null\n};\n\n(function createTypedArrayFcns() {\n\t/* jshint evil:true */\n\tvar keys = objectKeys( typedArrays );\n\tvar len = keys.length;\n\tvar key;\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tkey = keys[ i ];\n\t\ttypedArrays[ key ] = new Function( 'arr', 'return new '+key+'( arr );' );\n\t}\n})();\n\n\n// EXPORTS //\n\nmodule.exports = typedArrays;\n","'use strict';\n\n// MODULES //\n\nvar deepCopy = require( 'utils-copy' );\nvar getKeys = require( 'object-keys' ).shim();\n\n\n// COPY ERROR //\n\n/**\n* FUNCTION: copy( error )\n*\tCopies an error.\n*\n* @param {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error - error to copy\n* @returns {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error copy\n*/\nfunction copy( error ) {\n\t/* jshint newcap:false */\n\tvar keys;\n\tvar desc;\n\tvar key;\n\tvar err;\n\tvar i;\n\tif ( !( error instanceof Error ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Must provide an error object. Value: `' + error + '`.' );\n\t}\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = getKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = Object.getOwnPropertyDescriptor( error, key );\n\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\tdesc.value = deepCopy( error[ key ] );\n\t\t}\n\t\tObject.defineProperty( err, key, desc );\n\t}\n\treturn err;\n} // end FUNCTION copy()\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_array = {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number$1(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number$1(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number$1(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      // Coerce values to numbers.\n      for (i = 0; i < n; ++i) {\n        values[i] = +value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = +xz[0],\n          x1 = +xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);\n\n      // Coerce thresholds to numbers, ignoring any outside the domain.\n      var m = tz.length;\n      for (i = 0; i < m; ++i) tz[i] = +tz[i];\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      if (!arguments.length) return threshold;\n      threshold = typeof _ === \"function\" ? _\n          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))\n          : constant(+_);\n      return histogram;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number$1;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values.sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var version = \"0.7.1\";\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n}));","/**\n * Fast Fourier Transform module\n * 1D-FFT/IFFT, 2D-FFT/IFFT (radix-2)\n */\nvar FFT = (function(){\n  var FFT;  \n  \n  if(typeof exports !== 'undefined') {\n    FFT = exports;   // for CommonJS\n  } else {\n    FFT = {};\n  }\n  \n  var version = {\n    release: '0.3.0',\n    date: '2013-03'\n  };\n  FFT.toString = function() {\n    return \"version \" + version.release + \", released \" + version.date;\n  };\n\n  // core operations\n  var _n = 0,          // order\n      _bitrev = null,  // bit reversal table\n      _cstb = null;    // sin/cos table\n\n  var core = {\n    init : function(n) {\n      if(n !== 0 && (n & (n - 1)) === 0) {\n        _n = n;\n        core._initArray();\n        core._makeBitReversalTable();\n        core._makeCosSinTable();\n      } else {\n        throw new Error(\"init: radix-2 required\");\n      }\n    },\n    // 1D-FFT\n    fft1d : function(re, im) {\n      core.fft(re, im, 1);\n    },\n    // 1D-IFFT\n    ifft1d : function(re, im) {\n      var n = 1/_n;\n      core.fft(re, im, -1);\n      for(var i=0; i<_n; i++) {\n        re[i] *= n;\n        im[i] *= n;\n      }\n    },\n     // 1D-IFFT\n    bt1d : function(re, im) {\n      core.fft(re, im, -1);\n    },\n    // 2D-FFT Not very useful if the number of rows have to be equal to cols\n    fft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.fft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.fft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // 2D-IFFT\n    ifft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.ifft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.ifft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // core operation of FFT\n    fft : function(re, im, inv) {\n      var d, h, ik, m, tmp, wr, wi, xr, xi,\n          n4 = _n >> 2;\n      // bit reversal\n      for(var l=0; l<_n; l++) {\n        m = _bitrev[l];\n        if(l < m) {\n          tmp = re[l];\n          re[l] = re[m];\n          re[m] = tmp;\n          tmp = im[l];\n          im[l] = im[m];\n          im[m] = tmp;\n        }\n      }\n      // butterfly operation\n      for(var k=1; k<_n; k<<=1) {\n        h = 0;\n        d = _n/(k << 1);\n        for(var j=0; j<k; j++) {\n          wr = _cstb[h + n4];\n          wi = inv*_cstb[h];\n          for(var i=j; i<_n; i+=(k<<1)) {\n            ik = i + k;\n            xr = wr*re[ik] + wi*im[ik];\n            xi = wr*im[ik] - wi*re[ik];\n            re[ik] = re[i] - xr;\n            re[i] += xr;\n            im[ik] = im[i] - xi;\n            im[i] += xi;\n          }\n          h += d;\n        }\n      }\n    },\n    // initialize the array (supports TypedArray)\n    _initArray : function() {\n      if(typeof Uint32Array !== 'undefined') {\n        _bitrev = new Uint32Array(_n);\n      } else {\n        _bitrev = [];\n      }\n      if(typeof Float64Array !== 'undefined') {\n        _cstb = new Float64Array(_n*1.25);\n      } else {\n        _cstb = [];\n      }\n    },\n    // zero padding\n    _paddingZero : function() {\n      // TODO\n    },\n    // makes bit reversal table\n    _makeBitReversalTable : function() {\n      var i = 0,\n          j = 0,\n          k = 0;\n      _bitrev[0] = 0;\n      while(++i < _n) {\n        k = _n >> 1;\n        while(k <= j) {\n          j -= k;\n          k >>= 1;\n        }\n        j += k;\n        _bitrev[i] = j;\n      }\n    },\n    // makes trigonometiric function table\n    _makeCosSinTable : function() {\n      var n2 = _n >> 1,\n          n4 = _n >> 2,\n          n8 = _n >> 3,\n          n2p4 = n2 + n4,\n          t = Math.sin(Math.PI/_n),\n          dc = 2*t*t,\n          ds = Math.sqrt(dc*(2 - dc)),\n          c = _cstb[n4] = 1,\n          s = _cstb[0] = 0;\n      t = 2*dc;\n      for(var i=1; i<n8; i++) {\n        c -= dc;\n        dc += t*c;\n        s += ds;\n        ds -= t*s;\n        _cstb[i] = s;\n        _cstb[n4 - i] = c;\n      }\n      if(n8 !== 0) {\n        _cstb[n8] = Math.sqrt(0.5);\n      }\n      for(var j=0; j<n4; j++) {\n        _cstb[n2 - j]  = _cstb[j];\n      }\n      for(var k=0; k<n2p4; k++) {\n        _cstb[k + n2] = -_cstb[k];\n      }\n    }\n  };\n  // aliases (public APIs)\n  var apis = ['init', 'fft1d', 'ifft1d', 'fft2d', 'ifft2d'];\n  for(var i=0; i<apis.length; i++) {\n    FFT[apis[i]] = core[apis[i]];\n  }\n  FFT.bt = core.bt1d;\n  FFT.fft = core.fft1d;\n  FFT.ifft = core.ifft1d;\n  \n  return FFT;\n}).call(this);\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","'use strict';\n\nvar arrayStat = require('./array');\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nexports.max = function max(matrix) {\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return max;\n};\n\nexports.min = function min(matrix) {\n    var min = Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n        }\n    }\n    return min;\n};\n\nexports.minMax = function minMax(matrix) {\n    var min = Infinity;\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return {\n        min:min,\n        max:max\n    };\n};\n\nexports.entropy = function entropy(matrix, eps) {\n    if (typeof (eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n};\n\nexports.mean = function mean(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n};\n\nexports.sum = function sum(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theSum, i, j;\n\n    if (dimension === -1) {\n        theSum = [0];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theSum[0] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theSum = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theSum[j] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theSum = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theSum[j] += matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theSum;\n};\n\nexports.product = function product(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theProduct, i, j;\n\n    if (dimension === -1) {\n        theProduct = [1];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theProduct[0] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theProduct = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < rows; i++) {\n                theProduct[j] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theProduct = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < cols; i++) {\n                theProduct[j] *= matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theProduct;\n};\n\nexports.standardDeviation = function standardDeviation(matrix, means, unbiased) {\n    var vari = exports.variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n};\n\nexports.variance = function variance(matrix, means, unbiased) {\n    if (typeof (unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n};\n\nexports.median = function median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort(compareNumbers);\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n};\n\nexports.mode = function mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n};\n\nexports.skewness = function skewness(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n};\n\nexports.kurtosis = function kurtosis(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n};\n\nexports.standardError = function standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = exports.standardDeviation(matrix);\n    var l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n};\n\nexports.covariance = function covariance(matrix, dimension) {\n    return exports.scatter(matrix, undefined, dimension);\n};\n\nexports.scatter = function scatter(matrix, divisor, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof (divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = exports.mean(matrix, dimension);\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n\nexports.correlation = function correlation(matrix) {\n    var means = exports.mean(matrix),\n        standardDeviations = exports.standardDeviation(matrix, true, means),\n        scores = exports.zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n};\n\nexports.zScores = function zScores(matrix, means, standardDeviations) {\n    means = means || exports.mean(matrix);\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);\n    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);\n};\n\nexports.center = function center(matrix, means, inPlace) {\n    means = means || exports.mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n};\n\nexports.standardize = function standardize(matrix, standardDeviations, inPlace) {\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n};\n\nexports.weightedVariance = function weightedVariance(matrix, weights) {\n    var means = exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n};\n\nexports.weightedMean = function weightedMean(matrix, weights, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n};\n\nexports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return exports.weightedScatter(matrix, weights, means, factor, dimension);\n};\n\nexports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    if (typeof (factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n","/**\n * Fast Fourier Transform module\n * 1D-FFT/IFFT, 2D-FFT/IFFT (radix-2)\n */\nvar FFT = (function(){\n  var FFT;  \n  \n  if(typeof exports !== 'undefined') {\n    FFT = exports;   // for CommonJS\n  } else {\n    FFT = {};\n  }\n  \n  var version = {\n    release: '0.3.0',\n    date: '2013-03'\n  };\n  FFT.toString = function() {\n    return \"version \" + version.release + \", released \" + version.date;\n  };\n\n  // core operations\n  var _n = 0,          // order\n      _bitrev = null,  // bit reversal table\n      _cstb = null;    // sin/cos table\n\n  var core = {\n    init : function(n) {\n      if(n !== 0 && (n & (n - 1)) === 0) {\n        _n = n;\n        core._initArray();\n        core._makeBitReversalTable();\n        core._makeCosSinTable();\n      } else {\n        throw new Error(\"init: radix-2 required\");\n      }\n    },\n    // 1D-FFT\n    fft1d : function(re, im) {\n      core.fft(re, im, 1);\n    },\n    // 1D-IFFT\n    ifft1d : function(re, im) {\n      var n = 1/_n;\n      core.fft(re, im, -1);\n      for(var i=0; i<_n; i++) {\n        re[i] *= n;\n        im[i] *= n;\n      }\n    },\n     // 1D-IFFT\n    bt1d : function(re, im) {\n      core.fft(re, im, -1);\n    },\n    // 2D-FFT Not very useful if the number of rows have to be equal to cols\n    fft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.fft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.fft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // 2D-IFFT\n    ifft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.ifft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.ifft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // core operation of FFT\n    fft : function(re, im, inv) {\n      var d, h, ik, m, tmp, wr, wi, xr, xi,\n          n4 = _n >> 2;\n      // bit reversal\n      for(var l=0; l<_n; l++) {\n        m = _bitrev[l];\n        if(l < m) {\n          tmp = re[l];\n          re[l] = re[m];\n          re[m] = tmp;\n          tmp = im[l];\n          im[l] = im[m];\n          im[m] = tmp;\n        }\n      }\n      // butterfly operation\n      for(var k=1; k<_n; k<<=1) {\n        h = 0;\n        d = _n/(k << 1);\n        for(var j=0; j<k; j++) {\n          wr = _cstb[h + n4];\n          wi = inv*_cstb[h];\n          for(var i=j; i<_n; i+=(k<<1)) {\n            ik = i + k;\n            xr = wr*re[ik] + wi*im[ik];\n            xi = wr*im[ik] - wi*re[ik];\n            re[ik] = re[i] - xr;\n            re[i] += xr;\n            im[ik] = im[i] - xi;\n            im[i] += xi;\n          }\n          h += d;\n        }\n      }\n    },\n    // initialize the array (supports TypedArray)\n    _initArray : function() {\n      if(typeof Uint32Array !== 'undefined') {\n        _bitrev = new Uint32Array(_n);\n      } else {\n        _bitrev = [];\n      }\n      if(typeof Float64Array !== 'undefined') {\n        _cstb = new Float64Array(_n*1.25);\n      } else {\n        _cstb = [];\n      }\n    },\n    // zero padding\n    _paddingZero : function() {\n      // TODO\n    },\n    // makes bit reversal table\n    _makeBitReversalTable : function() {\n      var i = 0,\n          j = 0,\n          k = 0;\n      _bitrev[0] = 0;\n      while(++i < _n) {\n        k = _n >> 1;\n        while(k <= j) {\n          j -= k;\n          k >>= 1;\n        }\n        j += k;\n        _bitrev[i] = j;\n      }\n    },\n    // makes trigonometiric function table\n    _makeCosSinTable : function() {\n      var n2 = _n >> 1,\n          n4 = _n >> 2,\n          n8 = _n >> 3,\n          n2p4 = n2 + n4,\n          t = Math.sin(Math.PI/_n),\n          dc = 2*t*t,\n          ds = Math.sqrt(dc*(2 - dc)),\n          c = _cstb[n4] = 1,\n          s = _cstb[0] = 0;\n      t = 2*dc;\n      for(var i=1; i<n8; i++) {\n        c -= dc;\n        dc += t*c;\n        s += ds;\n        ds -= t*s;\n        _cstb[i] = s;\n        _cstb[n4 - i] = c;\n      }\n      if(n8 !== 0) {\n        _cstb[n8] = Math.sqrt(0.5);\n      }\n      for(var j=0; j<n4; j++) {\n        _cstb[n2 - j]  = _cstb[j];\n      }\n      for(var k=0; k<n2p4; k++) {\n        _cstb[k + n2] = -_cstb[k];\n      }\n    }\n  };\n  // aliases (public APIs)\n  var apis = ['init', 'fft1d', 'ifft1d', 'fft2d', 'ifft2d'];\n  for(var i=0; i<apis.length; i++) {\n    FFT[apis[i]] = core[apis[i]];\n  }\n  FFT.bt = core.bt1d;\n  FFT.fft = core.fft1d;\n  FFT.ifft = core.ifft1d;\n  \n  return FFT;\n}).call(this);\n","// source: https://en.wikipedia.org/wiki/Gyromagnetic_ratio\n\nexport const gyromagneticRatio = {\n  '1H': 267.52218744e6,\n  '2H': 41.065e6,\n  '3H': 285.3508e6,\n  '3He': -203.789e6,\n  '7Li': 103.962e6,\n  '13C': 67.28284e6,\n  '14N': 19.331e6,\n  '15N': -27.116e6,\n  '17O': -36.264e6,\n  '19F': 251.662e6,\n  '23Na': 70.761e6,\n  '27Al': 69.763e6,\n  '29Si': -53.19e6,\n  '31P': 108.291e6,\n  '57Fe': 8.681e6,\n  '63Cu': 71.118e6,\n  '67Zn': 16.767e6,\n  '129Xe': -73.997e6,\n};\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\nimport postProcessingNMR from './postProcessingNMR';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  // converting Hz to ppm\n  postProcessingNMR(entriesFlat);\n\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n  }\n}\n","import { gyromagneticRatio } from 'nmr-processing';\n\nexport default function postProcessingNMR(entriesFlat) {\n  // specific NMR functions\n  let observeFrequency = 0;\n  let shiftOffsetVal = 0;\n\n  for (let entry of entriesFlat) {\n    for (let spectrum of entry.spectra) {\n      if (entry.ntuples && entry.ntuples.symbol) {\n        if (!observeFrequency && spectrum.observeFrequency) {\n          observeFrequency = spectrum.observeFrequency;\n        }\n        if (!shiftOffsetVal && spectrum.shiftOffsetVal) {\n          shiftOffsetVal = spectrum.shiftOffsetVal;\n        }\n      } else {\n        observeFrequency = spectrum.observeFrequency;\n        shiftOffsetVal = spectrum.shiftOffsetVal;\n      }\n\n      if (observeFrequency) {\n        if (spectrum.xUnits && spectrum.xUnits.toUpperCase().includes('HZ')) {\n          spectrum.xUnits = 'PPM';\n          spectrum.xFactor = spectrum.xFactor / observeFrequency;\n          spectrum.firstX = spectrum.firstX / observeFrequency;\n          spectrum.lastX = spectrum.lastX / observeFrequency;\n          spectrum.deltaX = spectrum.deltaX / observeFrequency;\n          for (let i = 0; i < spectrum.data.x.length; i++) {\n            spectrum.data.x[i] /= observeFrequency;\n          }\n        }\n      }\n      if (shiftOffsetVal) {\n        let shift = spectrum.firstX - shiftOffsetVal;\n        spectrum.firstX = spectrum.firstX - shift;\n        spectrum.lastX = spectrum.lastX - shift;\n        for (let i = 0; i < spectrum.data.x.length; i++) {\n          spectrum.data.x[i] -= shift;\n        }\n      }\n\n      if (\n        observeFrequency &&\n        entry.ntuples &&\n        entry.ntuples.symbol &&\n        entry.ntuples.nucleus\n      ) {\n        let unit = '';\n        let pageSymbolIndex = entry.ntuples.symbol.indexOf(spectrum.pageSymbol);\n        if (entry.ntuples.units && entry.ntuples.units[pageSymbolIndex]) {\n          unit = entry.ntuples.units[pageSymbolIndex];\n        }\n        if (unit !== 'PPM') {\n          if (pageSymbolIndex !== 0) {\n            throw Error('Not sure about this ntuples format');\n          }\n\n          let ratio0 = gyromagneticRatio[entry.ntuples.nucleus[0]];\n          let ratio1 = gyromagneticRatio[entry.ntuples.nucleus[1]];\n          if (!ratio0 || !ratio1) {\n            throw Error('Problem with determination of gyromagnetic ratio');\n          }\n          let ratio = (ratio0 / ratio1) * observeFrequency;\n          spectrum.pageValue /= ratio;\n        }\n      }\n    }\n  }\n}\n","export default function prepareNtuplesDatatable(currentEntry, spectrum, kind) {\n  let xIndex = -1;\n  let yIndex = -1;\n  let firstVariable = '';\n  let secondVariable = '';\n  if (kind.indexOf('++') > 0) {\n    firstVariable = kind.replace(/.*\\(([a-zA-Z0-9]+)\\+\\+.*/, '$1');\n    secondVariable = kind.replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n  } else {\n    kind = kind.replace(/[^a-zA-Z]/g, '');\n    firstVariable = kind.charAt(0);\n    secondVariable = kind.charAt(1);\n    spectrum.variables = {};\n    for (let symbol of kind) {\n      let index = currentEntry.ntuples.symbol.indexOf(symbol);\n      if (index === -1) throw Error(`Symbol undefined: ${symbol}`);\n      spectrum.variables[symbol] = {};\n      for (let key in currentEntry.ntuples) {\n        if (currentEntry.ntuples[key][index]) {\n          spectrum.variables[symbol][key.replace(/^var/, '')] =\n            currentEntry.ntuples[key][index];\n        }\n      }\n    }\n  }\n  xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n  yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n\n  if (xIndex === -1) xIndex = 0;\n  if (yIndex === -1) yIndex = 0;\n\n  if (currentEntry.ntuples.first) {\n    if (currentEntry.ntuples.first.length > xIndex) {\n      spectrum.firstX = currentEntry.ntuples.first[xIndex];\n    }\n    if (currentEntry.ntuples.first.length > yIndex) {\n      spectrum.firstY = currentEntry.ntuples.first[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.last) {\n    if (currentEntry.ntuples.last.length > xIndex) {\n      spectrum.lastX = currentEntry.ntuples.last[xIndex];\n    }\n    if (currentEntry.ntuples.last.length > yIndex) {\n      spectrum.lastY = currentEntry.ntuples.last[yIndex];\n    }\n  }\n  if (\n    currentEntry.ntuples.vardim &&\n    currentEntry.ntuples.vardim.length > xIndex\n  ) {\n    spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n  }\n  if (currentEntry.ntuples.factor) {\n    if (currentEntry.ntuples.factor.length > xIndex) {\n      spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n    }\n    if (currentEntry.ntuples.factor.length > yIndex) {\n      spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.units) {\n    if (currentEntry.ntuples.units.length > xIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[xIndex]\n      ) {\n        spectrum.xUnits = `${currentEntry.ntuples.varname[xIndex]} [${currentEntry.ntuples.units[xIndex]}]`;\n      } else {\n        spectrum.xUnits = currentEntry.ntuples.units[xIndex];\n      }\n    }\n    if (currentEntry.ntuples.units.length > yIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[yIndex]\n      ) {\n        spectrum.yUnits = `${currentEntry.ntuples.varname[yIndex]} [${currentEntry.ntuples.units[yIndex]}]`;\n      } else {\n        spectrum.yUnits = currentEntry.ntuples.units[yIndex];\n      }\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n}\n","import { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareNtuplesDatatable from './prepareNtuplesDatatable';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparator = /[ \\t]*,[ \\t]*/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  canonicMetadataLabels: false,\n  dynamicTyping: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\n/**\n *\n * @param {text} jcamp\n * @param {object} [options]\n * @param {number} [options.keepRecordsRegExp=/^$/] By default we don't keep meta information\n * @param {number} [options.canonicDataLabels=true] Canonize the Labels (uppercase without symbol)\n * @param {number} [options.canonicMetadataLabels=false] Canonize the metadata Labels (uppercase without symbol)\n * @param {number} [options.dynamicTyping=false] Convert numbers to Number\n * @param {number} [options.withoutXY=false] Remove the XY data\n * @param {number} [options.chromatogram=false] Special post-processing for GC / HPLC / MS\n * @param {number} [options.keepSpectra=false] Force to keep the spectra in case of 2D\n * @param {number} [options.noContour=false] Don't calculate countour in case of 2D\n * @param {number} [options.nbContourLevels=7] Number of positive / negative contour levels to calculate\n * @param {number} [options.noiseMultiplier=5] Define for 2D the level as 5 times the median as default\n * @param {number} [options.profiling=false] Add profiling information\n */\n\nexport default function convert(jcamp, options = {}) {\n  options = Object.assign({}, defaultOptions, options);\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        prepareNtuplesDatatable(currentEntry, spectrum, infos[0]);\n\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          if (!spectrum.deltaX) {\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n        meta: {},\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnits = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnits = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.ntuples) {\n        currentEntry.ntuples.nucleus = dataValue.split(ntuplesSeparator);\n      }\n      if (currentEntry.twoD) {\n        currentEntry.yType = dataValue.split(ntuplesSeparator)[0];\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      currentEntry.meta &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let value = dataValue.trim();\n      let target, label;\n      if (dataLabel.startsWith('$')) {\n        label = options.canonicMetadataLabels\n          ? canonicDataLabel.substring(1)\n          : dataLabel.substring(1);\n        target = currentEntry.meta;\n      } else {\n        label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        target = currentEntry.info;\n      }\n\n      if (options.dynamicTyping) {\n        let parsedValue = Number.parseFloat(value);\n        if (!Number.isNaN(parsedValue)) value = parsedValue;\n      }\n      if (target[label]) {\n        if (!Array.isArray(target[label])) {\n          target[label] = [target[label]];\n        }\n        target[label].push(value);\n      } else {\n        target[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","export default function createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (let i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: [],\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      let finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      let match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        let canonicDataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (canonicDataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n"],"names":["GC_MS_FIELDS","complexChromatogram","result","spectra","length","chromatogram","times","Array","series","ms","dimension","data","existingGCMSFields","i","label","convertMSFieldToLabel","push","spectrum","pageValue","j","parseFloat","x","y","isMSField","canonicDataLabel","indexOf","value","toLowerCase","replace","convertToFloatArray","stringArray","floatArray","fastParseXYData","yFactor","deltaX","isXYdata","currentData","ascii","currentX","firstX","currentY","firstY","endLine","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","currentValue","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","Math","pow","duplicate","ascii2","removeCommentRegExp","peakTableSplitRegExp","parsePeakTable","isPeaktable","variables","Object","keys","numberOfVariables","forEach","variable","lines","split","values","trim","logs","parseXYZ","xFactor","parseXY","key","parseXYA","removeSymbolRegExp","isXYAdata","toString","prototype","object","call","endsWith","a","d","e","f","g","h","c","b","_ref","module","exports","window","median","input","isArray","TypeError","quickSelectMedian","slice","add2D","options","zData","minZ","maxZ","ySize","xSize","z","lastX","lastY","reverse","minX","min","maxX","max","minY","maxY","noise","getMedian","map","abs","convertTo3DZ","noContour","contourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","pAx","pAy","pBx","pBy","lineZValue","nbSubSpectra","nbPovars","x0","dx","y0","dy","iter","nbContourLevels","contourLevels","level","contourLevel","side","factor","noiseMultiplier","exp","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","generateContourLines","minMax","profiling","action","time","Date","now","start","simpleChromatogram","intensity","toStr","str","isArgs","callee","has","hasOwnProperty","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","o","ctor","constructor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","k","keysShim","isObject","isFunction","isArguments","isString","theKeys","skipProto","String","name","skipConstructor","equalsConstructorPrototypeIfNotBuggy","shim","arguments","originalKeys","typedArrays","require$$0","objectKeys","len","Function","ascending","NaN","bisector","compare","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","number$1","variance","array","n","m","s","isNaN","deviation","v","sqrt","extent","constant","identity","range","stop","step","ceil","e10","e5","e2","ticks","count","tickStep","floor","step0","step1","log","LN10","error","sturges","LN2","number","quantile","p","transpose","matrix","row","version","bisect","descending","histogram","domain","threshold","xz","x1","tz","shift","pop","bin","bins","_","thresholds","thresholdFreedmanDiaconis","sort","thresholdScott","thresholdSturges","mean","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","t","random","sum","zip","factory","FFT","_n","_bitrev","_cstb","core","init","Error","_initArray","_makeBitReversalTable","_makeCosSinTable","fft1d","re","im","fft","ifft1d","bt1d","fft2d","tre","tim","x2","y1","y2","ifft2d","inv","ik","tmp","wr","wi","xr","n4","l","Uint32Array","Float64Array","_paddingZero","n2","n8","n2p4","sin","PI","dc","ds","apis","bt","ifft","this","compareNumbers","arithmeticMean","mul","lnsum","means","samples","percent","alreadySorted","undefined","concat","RangeError","r1","r2","half","unbiased","theMean","theVariance","standardDeviation","averageDeviations","stdev","quart","q1","q2","q3","pooledVariance","vari","itemCount","itemArray","index","maxValue","maxIndex","vector1","vector2","mean1","mean2","cov","s2","s3","dev","m2","s4","eps","weights","weightedVariance","weightedMean","w","inPlace","standardDev","Infinity","l1","l2","N","rows","cols","theSum","theProduct","sum1","sum2","medians","modes","skew","kurt","m4","standardDeviations","standardErrors","sqrtN","scatter","divisor","scores","zScores","cor","standardize","center","jj","resultRow","sourceRow","ii","weightSum","arrayStat","s1","weightedScatter","gyromagneticRatio","postProcessing","entriesFlat","observeFrequency","shiftOffsetVal","entry","ntuples","symbol","xUnits","toUpperCase","includes","nucleus","unit","pageSymbolIndex","pageSymbol","units","ratio0","ratio1","ratio","postProcessingNMR","newNtuples","twoD","wantXY","keepSpectra","prepareNtuplesDatatable","currentEntry","kind","xIndex","yIndex","firstVariable","secondVariable","charAt","first","last","vardim","nbPoints","varname","yUnits","prepareSpectrum","ntuplesSeparator","Spectrum","defaultOptions","keepRecordsRegExp","canonicDataLabels","canonicMetadataLabels","dynamicTyping","withoutXY","jcamp","assign","entries","tmpResult","children","parentsStack","ldrs","ldr","position","dataLabel","substring","dataValue","infos","datatable","parentEntry","info","meta","title","dataType","dataClass","xType","shiftOffsetNum","vartype","varform","yType","page","sampleDescription","match","target","startsWith","parsedValue","Number","flatten","current","flat","stack","ntupleLevel","spaces","line","labelLine","join","finished"],"mappings":"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"}